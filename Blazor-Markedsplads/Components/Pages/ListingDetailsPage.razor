@page "/ListingDetailsPage/{Id:int}"
@inject IListingRepository ListingRepo
@inject NavigationManager NavManager
@rendermode InteractiveServer

<PageTitle>Annonce Detaljer</PageTitle>


<div class="container py-5">
    <h3>Annonce Detaljer</h3>

    @if (listing == null)
    {
        <div class="alert alert-warning">
            Kunne ikke finde annoncen med ID = @Id.
        </div>
        <button class="btn btn-secondary mt-3" @onclick="BackToList">
            Tilbage til oversigten
        </button>
    }
    else
    {
        <div class="row">
            <div class="col-md-6 mb-4">
                @if (listing.Images != null && listing.Images.Any())
                {
                    <img src="@($"/uploads/listings/{listing.Images.First().ImagePath}")"
                         class="img-fluid rounded shadow-sm mb-3"
                         alt="@($"{listing.Brand} {listing.Model}")" />

                    @if (listing.Images.Count > 1)
                    {
                        <div class="d-flex gap-2">
                            @foreach (var image in listing.Images.Skip(1))
                            {
                                <img src="@($"/uploads/listings/{image.ImagePath}")"
                                     class="img-fluid rounded" style="width: 80px; height: auto; cursor: pointer;"
                                     alt="Thumbnail" />
                            }
                        </div>
                    }
                }
                else
                {
                    <img src="images/laptop-placeholder.svg"
                         class="img-fluid rounded shadow-sm"
                         alt="Ingen billede" />
                }
            </div>

            <div class="col-md-6">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <h5 class="card-title">@listing.Title</h5>
                        <p class="card-text">
                            <strong>Mærke:</strong> @listing.Brand<br />
                            <strong>Model:</strong> @listing.Model<br />

                            @if (listing.Seller != null && !string.IsNullOrEmpty(listing.Seller.Name))
                            {
                                <strong>Sælger:</strong> 
                                @listing.Seller.Name
                        
                                <br />
                            }

                            <strong>Pris:</strong> @listing.Price.ToString("N0") kr.<br />
                            <strong>CPU:</strong> @listing.Cpu<br />
                            <strong>GPU:</strong> @listing.Gpu<br />
                            <strong>RAM:</strong> @listing.Ram GB<br />
                            <strong>Lager:</strong> @listing.Storage GB<br />
                            <strong>Operativsystem:</strong> @listing.OS<br />
                            <strong>Skærmstørrelse:</strong> @listing.ScreenSize<br />
                            <strong>Stand:</strong> @listing.Condition<br />
                            <strong>Telefon:</strong> @listing.Phone<br />
                            <strong>Beliggenhed:</strong> @listing.Location<br />
                            <strong>Oprettet:</strong> @listing.CreatedUtc.ToString("dd/MM/yyyy HH:mm")<br /><br />
                            <strong>Beskrivelse:</strong><br />
                            @((MarkupString)listing.Description.Replace(Environment.NewLine, "<br/>"))
                        </p>
                        <button class="btn btn-primary me-2" @onclick="ContactSeller">
                            Kontakt Sælger
                        </button>
                        <button class="btn btn-secondary" @onclick="BackToList">
                            Tilbage til oversigten
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    // -- Parameters --
    [Parameter]
    public int Id { get; set; }

    // -- Page State --
    private Listing? listing;
    private string loadingMessage = "Indlæser annonce...";

    // -- Lifecycle Methods --
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            // Henter den specifikke annonce baseret på ID'et fra URL'en.
            // Inkluderer sælger- og billedinformation via repository'ets JOINs.
            listing = await ListingRepo.GetByIdAsync(Id);

            if (listing == null)
            {
                loadingMessage = $"Kunne ikke finde annoncen med ID = {Id}.";
            }
        }
        catch (Exception ex)
        {
            loadingMessage = $"Der skete en fejl under indlæsning: {ex.Message}";
            Console.WriteLine($"Fejl ved hentning af annonce {Id}: {ex}");
        }
    }

    // -- Event Handlers --
    private void BackToList()
    {
        NavManager.NavigateTo("/ListingPage");
    }

    private void ContactSeller()
    {
        if (listing?.Seller != null)
        {
            // Opretter et 'mailto:' link for at åbne brugerens standard email-program.
            var sellerEmail = listing.Seller.Email;
            var subject = Uri.EscapeDataString($"Interesse i din annonce: \"{listing.Title}\"");
            var body = Uri.EscapeDataString($"Hej {listing.Seller.Name},\n\nJeg er interesseret i din annonce med ID {listing.Id} på LaptopMarket.\n\nMvh.");

            NavManager.NavigateTo($"mailto:{sellerEmail}?subject={subject}&body={body}", forceLoad: true);
        }
    }
}