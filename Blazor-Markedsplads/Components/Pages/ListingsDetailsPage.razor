@page "/ListingsDetailsPage"
@inject IListingRepository ListingRepo
@inject NavigationManager NavManager

<PageTitle>Annonce Detaljer</PageTitle>

<div class="container py-5">
    <h3>Annonce detaljer</h3>

    @if (listing == null)
    {
        <div class="alert alert-warning">Kunne ikke finde annoncen med ID = @Id.</div>
        <button class="btn btn-secondary mt-3" @onclick="BackToList">Tilbage til oversigten</button>
    }
    else
    {
        <div class="card mt-3">
            <div class="card-body">
                <h5 class="card-title">@listing.Title</h5>
                <p class="card-text">
                    <strong>Mærke:</strong> @listing.Brand<br />
                    <strong>Model:</strong> @listing.Model<br />
                    <strong>Pris:</strong> @listing.Price.ToString("N0") kr.<br />
                    <strong>Beskrivelse:</strong><br />@listing.Description
                </p>
                <button class="btn btn-primary" @onclick="BackToList">Tilbage til oversigten</button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Listing? listing;

    protected override async Task OnParametersSetAsync()
    {
        listing = await ListingRepo.GetByIdAsync(Id);
    }

    private void BackToList() => NavManager.NavigateTo("/ListingsPage");
}
