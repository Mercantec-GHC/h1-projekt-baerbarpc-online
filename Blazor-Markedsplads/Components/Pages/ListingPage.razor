@page "/ListingPage"
@inject IListingRepository ListingRepo
@inject NavigationManager NavManager
@rendermode InteractiveServer

<PageTitle>Alle Annoncer</PageTitle>

<nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm sticky-top">
    <div class="container">
        <a class="navbar-brand fw-bold d-flex align-items-center gap-1" href="/">
            <i class="bi bi-laptop"></i> LaptopMarket
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav"
                aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="mainNav">
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-lg-center gap-lg-3">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" ActiveClass="active">Forside</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/ListingPage" ActiveClass="active">Annoncer</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/CreateListing" ActiveClass="active">Opret Annonce</NavLink>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container py-5">
    @if (!string.IsNullOrWhiteSpace(Query))
    {
        <h3>Søgeresultater for "@Query"</h3>
    }
    else
    {
        <h3>Alle Annoncer</h3>
    }

    <div class="row mb-3">
        <div class="col-md-8">
            @* filterTerm er nu bundet til søgefeltet *@
            <InputText @bind-Value="filterTerm" placeholder="Søg på titel, brand, model..." class="form-control" @onkeyup="HandleSearchInput" />
        </div>
        <div class="col-md-4">
            <button class="btn btn-primary w-100" @onclick="Search">Søg</button>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(errorMsg))
    {
        <div class="alert alert-danger">@errorMsg</div>
    }
    else if (allListings == null)
    {
        <p><em>Indlæser annoncer...</em></p>
    }
    else if (allListings.Any())
    {
        <div class="row g-4">
            @foreach (var p in allListings)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <NavLink href="@($"/ListingDetailsPage/{p.Id}")" class="text-decoration-none text-body">
                        <div class="card h-100 shadow-sm border-0 hover-shadow">

                            <img src="@(p.Images.Any() ? $"/uploads/listings/{p.Images.First().ImagePath}" : "images/laptop-placeholder.svg")"
                                 class="card-img-top product-img"
                                 alt="@p.Title" />

                            <div class="card-body">
                                <h5 class="card-title fw-semibold" style="min-height: 48px;">@p.Title</h5>
                                <p class="card-text small text-muted">@($"{p.Brand} {p.Model}")</p>
                                <p class="card-text fw-bold text-success mb-1">@FormatPrice(p.Price)</p>
                            </div>
                            <div class="card-footer bg-white border-0 py-2 d-flex justify-content-between align-items-center">
                                <span class="small text-muted">@p.Location</span>
                                <i class="bi bi-arrow-right-circle fs-4 text-secondary"></i>
                            </div>
                        </div>
                    </NavLink>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">Ingen annoncer fundet, der matcher din søgning.</p>
    }
</div>

@code {
    private List<Listing>? allListings;
    private string filterTerm = ""; // Bruges til input-feltet
    private string? errorMsg;

    // RETTELSE 1: Vi opretter en property til at modtage søgeordet fra URL'en.
    [Parameter]
    [SupplyParameterFromQuery]
    public string? Query { get; set; }

    // RETTELSE 2: Vi bruger OnParametersSetAsync, som kører HVER GANG URL'en (og dens parametre) ændres.
    protected override async Task OnParametersSetAsync()
    {
        // Vi opdaterer søgefeltet med det, der står i URL'en.
        filterTerm = Query ?? "";

        try
        {
            // Vi bruger Query-parameteren fra URL'en til at hente data.
            allListings = await ListingRepo.SearchAsync(Query ?? "");
            errorMsg = null;
        }
        catch (Exception ex)
        {
            errorMsg = $"Fejl ved hentning af annoncer: {ex.Message}";
        }
    }

    // RETTELSE 3: Når man søger på siden, opdaterer vi nu URL'en, hvilket genindlæser komponenten korrekt.
    private void Search()
    {
        NavManager.NavigateTo($"/ListingPage?query={Uri.EscapeDataString(filterTerm)}");
    }

    private void HandleSearchInput(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Search();
        }
    }

    private static string FormatPrice(decimal price)
    {
        if (price <= 0)
            return "Pris aftales";

        return $"{price.ToString("N0")} kr";
    }
}