@page "/CreateListing"
@inject NavigationManager NavManager
@inject IListingRepository ListingRepo
@inject IWebHostEnvironment Environment
@inject UserStateService UserState
@using System.IO                   
@using BlazorMarkedsplads.Models
@rendermode InteractiveServer

<PageTitle>Opret Annonce</PageTitle>


<section class="py-5" style="background-color:#f8f9fa; min-height:70vh;">
    <div class="container d-flex justify-content-center">
        <div class="card shadow-sm border-0" style="max-width: 650px; width:100%;">
            <div class="card-body p-4 p-md-5">
                <h4 class="fw-bold">Opret Annonce</h4>
                <p class="text-muted mb-4">Udfyld oplysninger om din bærbare computer</p>

                @if (!string.IsNullOrWhiteSpace(formError))
                {
                    <div class="alert alert-danger">@formError</div>
                }

                <EditForm Model="createModel" OnValidSubmit="HandleSubmit" FormName="CreateListingForm">
                    <DataAnnotationsValidator />
                    <div class="row g-3">
                        <div class="col-12">
                            <label for="title" class="form-label fw-semibold">Overskrift</label>
                            <InputText id="title" class="form-control" @bind-Value="createModel.Title" />
                        </div>

                        <div class="col-md-6">
                            <label for="brand" class="form-label fw-semibold">Mærke</label>
                            <InputSelect id="brand" class="form-select" @bind-Value="createModel.Brand">
                                <option value="">– vælg –</option>
                                <option value="Apple">Apple</option>
                                <option value="Dell">Dell</option>
                                <option value="HP">HP</option>
                                <option value="Lenovo">Lenovo</option>
                                <option value="ASUS">ASUS</option>
                                <option value="Acer">Acer</option>
                                <option value="MSI">MSI</option>
                                <option value="Razer">Razer</option>
                                <option value="Andet">Andet</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-6">
                            <label for="model" class="form-label fw-semibold">Model</label>
                            <InputText id="model" class="form-control" @bind-Value="createModel.Model" />
                        </div>

                        <div class="col-md-6">
                            <label for="cpu" class="form-label fw-semibold">CPU</label>
                            <InputSelect id="cpu" class="form-select" @bind-Value="createModel.Cpu">
                                <option value="">– vælg –</option>
                                <option value="Intel i3">Intel i3</option>
                                <option value="Intel i5">Intel i5</option>
                                <option value="Intel i7">Intel i7</option>
                                <option value="Intel i9">Intel i9</option>
                                <option value="AMD Ryzen 3">AMD Ryzen 3</option>
                                <option value="AMD Ryzen 5">AMD Ryzen 5</option>
                                <option value="AMD Ryzen 7">AMD Ryzen 7</option>
                                <option value="AMD Ryzen 9">AMD Ryzen 9</option>
                                <option value="Apple M1">Apple M1</option>
                                <option value="Apple M2">Apple M2</option>
                                <option value="Apple M3">Apple M3</option>
                                <option value="Andet">Andet</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-6">
                            <label for="gpu" class="form-label fw-semibold">GPU</label>
                            <InputText id="gpu" class="form-control" @bind-Value="createModel.Gpu" />
                        </div>

                        <div class="col-md-4">
                            <label for="ram" class="form-label fw-semibold">RAM (GB)</label>
                            <InputSelect id="ram" class="form-select" @bind-Value="createModel.Ram">
                                <option value="0">– vælg –</option>
                                <option value="4">4 GB</option>
                                <option value="8">8 GB</option>
                                <option value="16">16 GB</option>
                                <option value="32">32 GB+</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-4">
                            <label for="storage" class="form-label fw-semibold">Lager (GB)</label>
                            <InputNumber id="storage" class="form-control" @bind-Value="createModel.Storage" />
                        </div>

                        <div class="col-md-4">
                            <label for="screenSize" class="form-label fw-semibold">Skærm (")</label>
                            <InputSelect id="screenSize" class="form-select" @bind-Value="createModel.ScreenSize">
                                <option value="">– vælg –</option>
                                <option value="Under 13&quot;">Under 13”</option>
                                <option value="13-14&quot;">13-14”</option>
                                <option value="15-16&quot;">15-16”</option>
                                <option value="Over 17&quot;">Over 17”</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-6">
                            <label for="os" class="form-label fw-semibold">Styresystem</label>
                            <InputSelect id="os" class="form-select" @bind-Value="createModel.OS">
                                <option value="">– vælg –</option>
                                <option value="Windows">Windows</option>
                                <option value="macOS">macOS</option>
                                <option value="Linux">Linux</option>
                                <option value="Uden OS">Uden OS</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-6">
                            <label for="condition" class="form-label fw-semibold">Tilstand</label>
                            <InputSelect id="condition" class="form-select" @bind-Value="createModel.Condition">
                                <option value="">– vælg –</option>
                                <option value="Næsten ny">Næsten ny</option>
                                <option value="Let brugt">Let brugt</option>
                                <option value="Brugt">Brugt</option>
                                <option value="Slidt">Slidt</option>
                            </InputSelect>
                        </div>

                        <div class="col-md-6">
                            <label for="price" class="form-label fw-semibold">Pris (kr.)</label>
                            <InputNumber id="price" class="form-control" @bind-Value="createModel.Price" />
                        </div>

                        <div class="col-md-6">
                            <label for="phone" class="form-label fw-semibold">Telefon</label>
                            <InputText id="phone" class="form-control" @bind-Value="createModel.Phone" />
                        </div>

                        <div class="col-md-12">
                            <label for="location" class="form-label fw-semibold">Lokation</label>
                            <InputText id="location" class="form-control" @bind-Value="createModel.Location" />
                        </div>

                        <div class="col-12">
                            <label for="images" class="form-label fw-semibold">Billeder (op til 5)</label>
                            <InputFile id="images" class="form-control" OnChange="LoadFiles" multiple />
                        </div>

                        @if (uploadedFileNames.Any())
                        {
                            <div class="col-12 mt-2">
                                <p class="small text-muted mb-1">Valgte filer:</p>
                                <ul class="list-group">
                                    @foreach (var fileName in uploadedFileNames)
                                    {
                                        <li class="list-group-item list-group-item-light small py-1 px-2">@fileName</li>
                                    }
                                </ul>
                            </div>
                        }

                        <div class="col-md-12">
                            <label for="description" class="form-label fw-semibold">Beskrivelse</label>
                            <InputTextArea id="description" class="form-control" @bind-Value="createModel.Description" rows="4" />
                        </div>

                        <div class="col-md-12 form-check mt-2">
                            <InputCheckbox id="acceptTerms" class="form-check-input" @bind-Value="createModel.AcceptTerms" />
                            <label for="acceptTerms" class="form-check-label">
                                Jeg accepterer vilkår &amp; betingelser
                            </label>
                        </div>
                    </div>

                    <div class="d-flex gap-2 mt-4">
                        <button type="submit" class="btn btn-primary flex-grow-1">
                            Opret annonce
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {

    // NY PARAMETER til at modtage ID fra URL'en
    [Parameter]
    [SupplyParameterFromQuery]
    public int? EditId { get; set; }
    private Listing createModel = new();
    private string? formError;


    private string pageTitle = "Opret Annonce";
    private string submitButtonText = "Opret annonce";

    // NYE LISTER TIL AT HÅNDTERE UPLOADEDE FILER
    private List<string> uploadedFilePaths = new();
    private List<string> uploadedFileNames = new();



    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        uploadedFileNames.Clear();
        uploadedFilePaths.Clear();
        formError = null;

        var uploadPath = Path.Combine(Environment.WebRootPath, "uploads", "listings");
        Directory.CreateDirectory(uploadPath);

        foreach (var file in e.GetMultipleFiles(5))
        {
            try
            {
                var uniqueFileName = $"{Guid.NewGuid()}{Path.GetExtension(file.Name)}";
                var fullPath = Path.Combine(uploadPath, uniqueFileName);

                await using var stream = file.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024);
                await using var fs = new FileStream(fullPath, FileMode.Create);
                await stream.CopyToAsync(fs);

                uploadedFileNames.Add(file.Name);
                uploadedFilePaths.Add(uniqueFileName);
            }
            catch (Exception ex)
            {
                formError = $"Fejl under upload af fil '{file.Name}': {ex.Message}";
                uploadedFileNames.Clear();
                uploadedFilePaths.Clear();
                return;
            }
        }
    }

    // TILFØJ EN SIKKERHEDSTJEK
    protected override void OnInitialized()
    {
        if (!UserState.IsLoggedIn)
        {
            NavManager.NavigateTo("/login"); // Send brugeren til login, hvis de ikke er logget ind
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (EditId.HasValue) // Er vi i rediger-tilstand?
        {
            pageTitle = "Rediger Annonce";
            submitButtonText = "Gem Ændringer";

            var existingListing = await ListingRepo.GetByIdAsync(EditId.Value);
            if (existingListing != null)
            {
                createModel = existingListing; // Udfyld formularen med eksisterende data
            }
            else
            {
                formError = "Annoncen du prøver at redigere blev ikke fundet.";
                EditId = null; // Gå tilbage til opret-tilstand
            }
        }
        else // Opret-tilstand
        {
            pageTitle = "Opret Annonce";
            submitButtonText = "Opret annonce";
            createModel = new Listing(); // Nulstil modellen
        }
    }

    private async Task HandleSubmit()
    {
        formError = null;

        if (!createModel.AcceptTerms)
        {
            formError = "Du skal acceptere vilkår og betingelser.";
            return;
        }

        if (createModel.Ram == 0)
        {
            formError = "Du skal vælge en RAM-størrelse.";
            return;
        }

        if (string.IsNullOrWhiteSpace(createModel.ScreenSize))
        {
            formError = "Du skal vælge en skærmstørrelse.";
            return;
        }

        if (!UserState.UserId.HasValue)
        {
            formError = "Fejl: Kunne ikke identificere bruger. Prøv at logge ind igen.";
            return;
        }



        createModel.UserId = UserState.UserId.Value; // <-- VIGTIGT!
        createModel.CreatedUtc = DateTime.UtcNow;

        var listing = new Listing
        {
            UserId = createModel.UserId,
            Brand = createModel.Brand?.Trim() ?? string.Empty,
            Model = createModel.Model?.Trim() ?? string.Empty,
            Gpu = createModel.Gpu?.Trim() ?? string.Empty,
            Cpu = createModel.Cpu?.Trim() ?? string.Empty,
            Ram = createModel.Ram,
            Storage = createModel.Storage,
            OS = createModel.OS?.Trim() ?? string.Empty,
            Price = createModel.Price,
            ScreenSize = createModel.ScreenSize?.Trim() ?? string.Empty,
            Condition = createModel.Condition?.Trim() ?? string.Empty,
            Title = createModel.Title?.Trim() ?? string.Empty,
            Description = createModel.Description?.Trim() ?? string.Empty,
            Phone = createModel.Phone?.Trim() ?? string.Empty,
            Location = createModel.Location?.Trim() ?? string.Empty,
            CreatedUtc = createModel.CreatedUtc
        };

        try
        {
            if (EditId.HasValue) // Gemmer vi en eksisterende annonce?
            {
                createModel.Id = EditId.Value; // Sørg for at ID er sat
                await ListingRepo.UpdateAsync(createModel);
                NavManager.NavigateTo($"/ListingDetailsPage/{createModel.Id}"); // Gå til den redigerede annonce
            }
            else // Opretter vi en ny?
            {
                if (!UserState.UserId.HasValue) { /* ... fejlhåndtering ... */ return; }
                createModel.UserId = UserState.UserId.Value;
                createModel.CreatedUtc = DateTime.UtcNow;

                int newId = await ListingRepo.InsertAsync(createModel);
                // ... håndter billeder som før ...
                NavManager.NavigateTo("/ListingPage");
            }
        }
        catch (Exception ex)
        {
            formError = $"Der opstod en fejl: {ex.Message}";
        }
    }
}