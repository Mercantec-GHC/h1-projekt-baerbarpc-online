@page "/ListingsPage"
@inject IListingRepository ListingRepo
@inject NavigationManager NavManager
@rendermode InteractiveServer

<PageTitle>Alle Annoncer</PageTitle>

<nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm sticky-top">
    <div class="container">
        <a class="navbar-brand fw-bold d-flex align-items-center gap-1" href="/">
            <i class="bi bi-laptop"></i> LaptopMarket
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav"
                aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="mainNav">
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-lg-center gap-lg-3">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/" ActiveClass="active">Forside</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/ListingsPage" ActiveClass="active">Annoncer</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/CreateListing" ActiveClass="active">Opret Annonce</NavLink>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container py-5">
    <h3>Alle Annoncer</h3>

    <div class="row mb-3">
        <div class="col-md-8">
            <InputText @bind-Value="filterTerm" placeholder="Søg på brand/model/..." class="form-control" />
        </div>
        <div class="col-md-4">
            <button class="btn btn-primary w-100" @onclick="PerformSearch">Søg</button>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(errorMsg))
    {
        <div class="alert alert-danger">@errorMsg</div>
    }
    else if (allListings?.Any() == true)
    {
        <div class="row g-4">
            @foreach (var p in allListings)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <div class="card h-100 shadow-sm border-0">
                        <img src="images/laptop-placeholder.svg"
                             class="card-img-top product-img"
                             alt="@($"{p.Brand} {p.Model}")" />
                        <div class="card-body">
                            <h5 class="card-title fw-semibold">@($"{p.Brand} {p.Model}")</h5>
                            <p class="card-text small text-muted">@($"{p.Cpu}, {p.Ram} RAM, {p.Storage} GB")</p>
                            <p class="card-text fw-bold text-success mb-1">@FormatPrice(p.Price)</p>
                        </div>
                        <div class="card-footer bg-white border-0 py-2 d-flex justify-content-end">
                            <button class="btn btn-sm btn-light" @onclick="() => NavigateToDetails(p.Id)">
                                <i class="bi bi-arrow-right-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">Ingen annoncer fundet.</p>
    }
</div>

@code {
    private List<Listing> allListings = new();
    private string filterTerm = "";
    private string? errorMsg;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Henter alle (eller brug en dedikeret metode hentAlle, hvis ønsket)
            allListings = await ListingRepo.GetPremiumAsync(100);
        }
        catch (Exception ex)
        {
            errorMsg = $"Fejl ved hentning: {ex.Message}";
        }
    }

    private async Task PerformSearch()
    {
        if (string.IsNullOrWhiteSpace(filterTerm))
        {
            await OnInitializedAsync();
        }
        else
        {
            try
            {
                allListings = await ListingRepo.SearchAsync(filterTerm);
            }
            catch (Exception ex)
            {
                errorMsg = $"Fejl ved søgning: {ex.Message}";
            }
        }
    }

    private void NavigateToDetails(int id) => NavManager.NavigateTo($"/ListingsDetailsPage/{id}");

    private static string FormatPrice(string raw)
    {
        if (string.IsNullOrWhiteSpace(raw))
            return raw;

        var digits = new string(raw.Where(char.IsDigit).ToArray());
        return int.TryParse(digits, out var val)
            ? $"{val:N0} kr"
            : raw;
    }
}
